//
// Copyright (C) Mat Hopwood www.drmop.com
// For details of license see license.txt
//
var LibSocial={Log:function(e){console.log(e)},LogError:function(e){console.log(e)},Facebook:{StatusChangeCallback:void 0,Init:function(e,t){window.fbAsyncInit=function(){FB.init({appId:e,autoLogAppEvents:!0,xfbml:!0,version:"v3.1"}),FB.getLoginStatus(function(e){t!==void 0&&t(e)})},function(e,t,n){var a,r=e.getElementsByTagName(t)[0];e.getElementById(n)||(a=e.createElement(t),a.id=n,a.src="https://connect.facebook.net/en_US/sdk.js",r.parentNode.insertBefore(a,r))}(document,"script","facebook-jssdk")},Login:function(e){FB.login(function(t){e!==void 0&&e(t)},{scope:"public_profile,email"})},GetProfile:function(e){FB.api("/me",function(t){e!==void 0&&e(t)})},Logout:function(e){FB.logout(function(t){e!==void 0&&e(t)})}}//
// Copyright (C) Mat Hopwood www.drmop.com
// For details of license see license.txt
//
};function GameService(e){this.service=null,this.name=e,"xtralife"===e&&(this.service=new LibXtralife),GameService.instance=this}GameService.LbdEntry=function(e,t,n,a,r,i,s){this.id=e,this.rank=t,this.name=n,this.score=a,this.extra=r,this.photo=i,this.timestamp=s,this.getPlayer=function(){var e=this;return{rank:this.rank,getName:function(){return e.name},getPhoto:function(){return e.photo===void 0?null:e.photo},getID:function(){return e.id}}},this.getRank=function(){return this.rank},this.getScore=function(){return this.score},this.getExtraData=function(){return this.extra},this.getTimestamp=function(){return this.timestamp}},GameService.Player=function(e,t,n,a,r){this.id=e,this.name=t,this.photo=n,this.email=a,this.lang=r,this.getName=function(){return this.name},this.getPhoto=function(){return this.photo===void 0?null:this.photo},this.getID=function(){return this.id},this.getEmail=function(){return this.email},this.getLanguage=function()// None standard IG
{return this.lang}},GameService.Game=function(e,t,n,a,r){this.id=e,this.name=t,this.login=n,this.icon=a,this.location=r},GameService.prototype.Init=function(e,t,n){return null===this.service?void 0:this.service.Init(e,t,n)},GameService.prototype.LoginAnonymously=function(e,t){return null===this.service?void(void 0!==t&&t("none",null)):this.service.LoginAnonymously(e,t)},GameService.prototype.ResumeSession=function(e,t,n){return null===this.service?void(void 0!==n&&n("none",null)):this.service.ResumeSession(e,t,n)},GameService.prototype.LoginWithCredentials=function(e,t,n,a){return null===this.service?void(void 0!==a&&a("none",null)):this.service.LoginWithCredentials(e,t,n,a)},GameService.prototype.LoginWithShortCode=function(e,t){return null===this.service?void(void 0!==t&&t("none",null)):this.service.LoginWithShortCode(e,t)},GameService.prototype.LoginWithFacebook=function(e,t){return null===this.service?void(void 0!==t&&t("none",null)):this.service.LoginWithFacebook(e,t)},GameService.prototype.Logout=function(e){return null===this.service?void(void 0!==e&&e("none")):this.service.Logout(e)},GameService.prototype.ConvertAccount=function(e,t,n,a){return null===this.service?void(void 0!==a&&a("none")):this.service.ConvertAccount(e,t,n,a)},GameService.prototype.LinkAccount=function(e,t,n,a){return null===this.service?void(void 0!==a&&a("none")):this.service.LinkAccount(e,t,n,a)},GameService.prototype.ResetPassword=function(e,t,n,a,r){return null===this.service?void(void 0!==r&&r("none")):this.service.ResetPassword(e,t,n,a,r)},GameService.prototype.ChangePassword=function(e,t){return null===this.service?void(void 0!==t&&t("none")):this.service.ChangePassword(e,t)},GameService.prototype.GetGamerData=function(){return null===this.service?null:this.service.GetGamerData()},GameService.prototype.GetProfileData=function(e){return null===this.service?null:this.service.GetProfileData(e)},GameService.prototype.GetProfile=function(e){return null===this.service?void(void 0!==e&&e("none")):this.service.GetProfile(e)},GameService.prototype.SetProfile=function(e,t){return null===this.service?void(void 0!==t&&t("none")):this.service.SetProfile(e,t)},GameService.prototype.GetGames=function(){return null===this.service?null:this.service.GetGames()},GameService.prototype.ListUsers=function(e,t,n,a){return null===this.service?void(void 0!==a&&a(null)):this.service.ListUsers(e,t,n,a)},GameService.prototype.LeaderboardGetPaged=function(e,t,n,a){return null===this.service?void(void 0!==a&&a(null)):this.service.LeaderboardGetPaged(e,t,n,a)},GameService.prototype.LeaderboardGetFriendsPaged=function(e,t,n,a){return null===this.service?void(void 0!==a&&a(null)):this.service.LeaderboardGetFriendsPaged(e,t,n,a)},GameService.prototype.LeaderboardGetRank=function(e,t){return null===this.service?void(void 0!==t&&t(null)):this.service.LeaderboardGetRank(e,t)},GameService.prototype.LeaderboardSetScore=function(e,t,n,a,r){return null===this.service?void(void 0!==r&&r(!1)):this.service.LeaderboardSetScore(e,t,n,a,r)},GameService.prototype.SetUserData=function(e,t,n){return null===this.service?void(void 0!==n&&n(!1)):this.service.SetUserData(e,t,n)},GameService.prototype.GetUserData=function(e,t){return null===this.service?void(void 0!==t&&t(null)):this.service.GetUserData(e,t)},GameService.prototype.GetFriends=function(e){return null===this.service?void(void 0!==e&&e(null)):this.service.GetFriends(e)},GameService.prototype.AddFriend=function(e,t){return null===this.service?void(void 0!==t&&t(!1)):this.service.AddFriend(e,t)},GameService.prototype.RemoveFriend=function(e,t){return null===this.service?void(void 0!==t&&t(!1)):this.service.RemoveFriend(e,t)},GameService.prototype.SendEvent=function(e,t,n){return null===this.service?void(void 0!==n&&n("none")):this.service.SendEvent(e,t,n)},GameService.prototype.ListenForEvent=function(e){return null===this.service?void(void 0!==e&&e("none")):this.service.ListenForEvent(e)},GameService.prototype.GetAllEvents=function(e){return null===this.service?void(void 0!==e&&e(null)):this.service.GetAllEvents(e)},GameService.prototype.GetReferralCode=function(e){return null===this.service?void(void 0!==e&&e(null)):this.service.GetReferralCode(e)},GameService.prototype.UseReferralCode=function(e,t){return null===this.service?void(void 0!==t&&t(!1)):this.service.UseReferralCode(e,t)};//
// Copyright (C) Mat Hopwood www.drmop.com
// For details of license see license.txt
//
function LibXtralife(){}LibXtralife.Log=function(e){console.log(e)},LibXtralife.LogError=function(e){console.log(e)},LibXtralife.prototype.Init=function(e,t,n){this.clan=Clan(e,t,n);var a=localStorage.getItem("gamer");null!==a&&(this.gamerData=JSON.parse(a))},LibXtralife.prototype.LoginAnonymously=function(e,t){return this.gamerData?void this.ResumeSession(this.gamerData.gamer_id,this.gamerData.gamer_secret,t):e?void this.clan.login(null,function(e,n){LibXtralife.Log(">>>> Creating new anonymous player"),null==e&&(this.gamerData=n,localStorage.setItem("gamer",JSON.stringify(n))),t!==void 0&&t(e,n)}.bind(this)):(LibXtralife.Log(">>>> Anonymous login disabled"),void(void 0!==t&&t(null,null)))},LibXtralife.prototype.ResumeSession=function(e,t,n){this.clan.resumeSession(e,t,function(e,t){LibXtralife.Log(">>>> Resuming session"),null==e&&(this.gamerData=t,localStorage.setItem("gamer",JSON.stringify(t))),n!==void 0&&n(e,t)}.bind(this))},LibXtralife.prototype.LoginWithCredentials=function(e,t,n,a){return this.gamerData?void this.ResumeSession(this.gamerData.gamer_id,this.gamerData.gamer_secret,a):void this.clan.login("email",e,t,n,function(e,t){null==e&&(this.gamerData=t,localStorage.setItem("gamer",JSON.stringify(t))),a!==void 0&&a(e,t)}.bind(this))},LibXtralife.prototype.LoginWithShortCode=function(e,t){return this.gamerData?void this.ResumeSession(this.gamerData.gamer_id,this.gamerData.gamer_secret,t):void this.clan.loginWithShortCode(e,function(e,n){null==e&&(this.gamerData=n,localStorage.setItem("gamer",JSON.stringify(n))),t!==void 0&&t(e,n)}.bind(this))},LibXtralife.prototype.LoginWithFacebook=function(e,t){return this.gamerData?void this.ResumeSession(this.gamerData.gamer_id,this.gamerData.gamer_secret,t):void this.clan.login("facebook","",e,function(e,n){null==e&&(this.gamerData=n,localStorage.setItem("gamer",JSON.stringify(n))),t!==void 0&&t(e,n)}.bind(this))},LibXtralife.prototype.Logout=function(e){this.clan.logout(function(t){e!==void 0&&e(t)}.bind(this))},LibXtralife.prototype.ConvertAccount=function(e,t,n,a){this.gamerData?this.clan.withGamer(this.gamerData).convertTo(e,t,n,function(e,t){a!==void 0&&a(e,t)}.bind(this)):a!==void 0&&a("noinit")},LibXtralife.prototype.LinkAccount=function(e,t,n,a){this.gamerData?(console.log("LinkAccount: "+e+", "+t+", "+n),this.clan.withGamer(this.gamerData).link(e,t,n,function(e,t){console.log("LinkAccount error: "+JSON.stringify(e)),console.log("LinkAccount result: "+JSON.stringify(t)),a!==void 0&&a(e,t)}.bind(this))):a!==void 0&&a("noinit")},LibXtralife.prototype.ResetPassword=function(e,t,n,a,r){this.clan.sendResetMailPassword(e,t,n,a,function(e,t){r!==void 0&&r(e,t)}.bind(this))},LibXtralife.prototype.ChangePassword=function(e,t){this.gamerData?this.clan.withGamer(this.gamerData).changePassword(e,function(e,n){t!==void 0&&t(e,n)}.bind(this)):t!==void 0&&t("noinit")},LibXtralife.prototype.GetGamerData=function(){return this.gamerData},LibXtralife.prototype.GetProfileData=function(){if(this.gamerData){var e=this.gamerData.profile;return new GameService.Player(this.gamerData.gamer_id,e.displayName,e.avatar,e.email,e.lang)}return null},LibXtralife.prototype.GetProfile=function(e){this.gamerData?this.clan.withGamer(this.gamerData).profile().get(function(t,n){e!==void 0&&e(t,n)}):e!==void 0&&e("noinit")},LibXtralife.prototype.SetProfile=function(e,t){var n=this;this.gamerData?this.clan.withGamer(this.gamerData).profile().set(e,function(a,r){if(null===a)for(var i in e)n.gamerData.profile[i]=e[i];t!==void 0&&t(a,r)}):t!==void 0&&t("noinit")},LibXtralife.prototype.GetGames=function(){if(this.gamerData){for(var e=this.gamerData.games,n=[],a=0;a<e.length;a++)n.push(new GameService.Game(e[a].appid,e[a].appid,e[a].lastlogin,null,null));return n}return null},LibXtralife.prototype.ListUsers=function(e,t,n,a){this;this.gamerData?this.clan.withGamer(this.gamerData).listUsers(encodeURIComponent(e),n,t,function(e,t){console.log("ListUsers error: "+JSON.stringify(e)),console.log("ListUsers result: "+JSON.stringify(t)),a!==void 0&&(null===e?a(t.result):a(null))}):a!==void 0&&a(null)},LibXtralife.prototype.LeaderboardGetPaged=function(e,t,n,a){this;this.gamerData?this.clan.withGamer(this.gamerData).leaderboards(this.clan.privateDomain).getHighscores(e,+t,+n,function(t,n){// If the operation went wrong for some reason
if(null!==t)LibXtralife.LogError("Leaderboard Get Paged error: "+t),void 0!==a&&a(null);else{LibXtralife.Log("LeaderboardGetPaged: "+JSON.stringify(n));var r=[],i=n[e];if(i!==void 0)for(var s,r=[],o=0;o<i.scores.length;o++)s=i.scores[o],void 0!==s&&r.push(new GameService.LbdEntry(s.gamer_id,i.rankOfFirst+o,s.profile.displayName,s.score.score,s.score.info,s.profile.avatar,s.score.timestamp));a!==void 0&&a(r)}}):a!==void 0&&a(null)},LibXtralife.prototype.LeaderboardGetFriendsPaged=function(e,t,n,a){this;this.gamerData?this.clan.withGamer(this.gamerData).leaderboards(this.clan.privateDomain).getFriendsHighscores(e,+t,+n,function(t,n){if(null!==t)LibXtralife.LogError("Leaderboard Get Friends Paged error: "+t),void 0!==a&&a(null);else{LibXtralife.Log("LeaderboardGetFriendsPaged: "+JSON.stringify(n));var r=[],i=n[e];if(i!==void 0)for(var s,o=0;o<i.length;o++)s=i[o],void 0!==s&&r.push(new GameService.LbdEntry(s.gamer_id,s.rank,s.profile.displayName,s.score.score,s.score.info,s.profile.avatar,s.score.timestamp));a!==void 0&&a(r)}}):a!==void 0&&a(null)},LibXtralife.prototype.LeaderboardGetRank=function(e,t){var n=this;this.gamerData?this.clan.withGamer(this.gamerData).leaderboards(this.clan.privateDomain).getCenteredHighscores(e,1,function(a,r){var i=null;if(LibXtralife.Log(n.gamerData),null!==a)LibXtralife.LogError("Could not get centered rank: "+JSON.stringify(a));else{var s=r[e];if(void 0!==s){var o=s.scores[0];void 0!==o&&(LibXtralife.Log("LeaderboardGetRank: "+JSON.stringify(r)),i=new GameService.LbdEntry(o.gamer_id,s.rankOfFirst,o.profile.displayName,o.score.score,o.score.info,o.profile.avatar,o.score.timestamp))}}void 0!==t&&t(i)}):t!==void 0&&t(null)},LibXtralife.prototype.LeaderboardSetScore=function(e,t,n,a,r){this;if(this.gamerData){this.clan.withGamer(this.gamerData).leaderboards(this.clan.privateDomain).set(e,t,{score:+n,info:a},function(e,t){null===e?(LibXtralife.Log("LeaderboardSetScore: "+JSON.stringify(t)),r!==void 0&&r(!0)):(LibXtralife.LogError("Leaderboard Set score error: "+e),r!==void 0&&r(!1))})}else void 0!==r&&r(!1)},LibXtralife.prototype.SetUserData=function(e,t,n){this.gamerData?this.clan.withGamer(this.gamerData).gamervfs(this.clan.privateDomain).setValue(e,t,function(e,t){null===e?(LibXtralife.LogError("User data set: "+t.result),n!==void 0&&n(!0)):(LibXtralife.LogError("Set user data error: "+JSON.stringify(e)),n!==void 0&&n(!1))}):n!==void 0&&n(!1)},LibXtralife.prototype.GetUserData=function(e,t){this.gamerData?this.clan.withGamer(this.gamerData).gamervfs(this.clan.privateDomain).getValue(e,function(n,a){null===n?(LibXtralife.Log("User data get: "+JSON.stringify(a)),t!==void 0&&t(a.result[e])):(LibXtralife.LogError("Get user data error: "+JSON.stringify(n)),t!==void 0&&t(null))}):t!==void 0&&t(null)},LibXtralife.prototype.GetFriends=function(e){this.gamerData?this.clan.withGamer(this.gamerData).friends(this.clan.privateDomain).get(function(t,n){if(null!==t)LibXtralife.LogError("Get friends error: "+JSON.stringify(t)),void 0!==e&&e(null);else{LibXtralife.Log("Get friends: "+JSON.stringify(n));var a=[],r=n.friends;if(r!==void 0)for(var i,s=0;s<r.length;s++)i=r[s],void 0!==i&&a.push(new GameService.Player(i.gamer_id,i.profile.displayName,i.profile.avatar,i.profile.email));e!==void 0&&e(a)}}):e!==void 0&&e(null)},LibXtralife.prototype.AddFriend=function(e,t){this.gamerData?this.clan.withGamer(this.gamerData).friends(this.clan.privateDomain).status(e,"add",function(e,n){null===e?(LibXtralife.Log("AddFriend: "+JSON.stringify(n)),t!==void 0&&t(!0)):(LibXtralife.LogError("AddFriend error: "+JSON.stringify(e)),t!==void 0&&t(!1))}):t!==void 0&&t(!1)},LibXtralife.prototype.RemoveFriend=function(e,t){this.gamerData?this.clan.withGamer(this.gamerData).friends(this.clan.privateDomain).status(e,"forget",function(e,n){null===e?(LibXtralife.Log("RemoveFriend: "+JSON.stringify(n)),t!==void 0&&t(!0)):(LibXtralife.LogError("RemoveFriend error: "+JSON.stringify(e)),t!==void 0&&t(!1))}):t!==void 0&&t(!1)},LibXtralife.prototype.SendEvent=function(e,t,n){this.gamerData===void 0?n!==void 0&&n("noinit"):this.clan.withGamer(this.gamerData).events(this.clan.privateDomain).send(e,t,null,function(e,t){null===e?(LibXtralife.Log("SendEvent: "+JSON.stringify(t)),n!==void 0&&n(e,t)):(LibXtralife.LogError("SendEvent error: "+JSON.stringify(e)),n!==void 0&&n(e,t))})},LibXtralife.prototype.ListenForEvent=function(e){this.gamerData===void 0?e!==void 0&&e("noinit"):this.clan.withGamer(this.gamerData).events(this.clan.privateDomain).receive("auto",function(t,n){null===t?(LibXtralife.Log("ListenForEvent: "+JSON.stringify(n)),e!==void 0&&e(t,n)):(LibXtralife.LogError("ListenForEvent error: "+JSON.stringify(t)),e!==void 0&&e(t,n))})},LibXtralife.prototype.GetAllEvents=function(e){if(void 0===this.gamerData)return void(void 0!==e&&e(null));var t=[];events_available=!0;var n=this,a=function(){n.ListenForEvent(function(n,r){null===r?e!==void 0&&e(t):(t.push(r),a())})};a()},LibXtralife.prototype.GetReferralCode=function(e){this.gamerData===void 0?e!==void 0&&e(null):this.clan.withGamer(this.gamerData).referral(this.clan.privateDomain).getCode(function(t,n){null===n?e!==void 0&&e(null):e!==void 0&&e(n.godfathercode)})},LibXtralife.prototype.UseReferralCode=function(e,t){this.gamerData===void 0?t!==void 0&&t(!1):this.clan.withGamer(this.gamerData).referral(this.clan.privateDomain).useCode(e,null,function(e){null===e?t!==void 0&&t(!0):t!==void 0&&t(!1)})};//
// Copyright (C) Mat Hopwood www.drmop.com
// For details of license see license.txt
//
function LibCrazyGames(){// NOTES:
// Preloading is not supported
// Interstitial is supported
// Rewarded is supported
}LibCrazyGames.Log=function(e){console.log(e)},LibCrazyGames.LogError=function(e){console.log(e)},LibCrazyGames.prototype.InitAds=function(e){LibCrazyGames.Log(">>>> CrazyGames: Init");var t=this;this.crazysdk=window.CrazyGames.CrazySDK.getInstance(),this.adRequested=!1,this.startedCallback=e.startedCallback,this.finishedCallback=e.finishedCallback,this.crazysdk.init(),this.crazysdk.addEventListener("adStarted",function(){LibCrazyGames.Log("CrazyGames: adStarted"),t.startedCallback!==void 0&&t.startedCallback()}),this.crazysdk.addEventListener("adError",function(){LibCrazyGames.Log("CrazyGames: adError"),t.adRequested=!1,t.finishedCallback!==void 0&&t.finishedCallback(!1),t.watchedCallback!==void 0&&t.watchedCallback({code:"ADS_NOT_LOADED",message:"ADS_NOT_LOADED"}),t.watchedCallback=void 0}),this.crazysdk.addEventListener("adFinished",function(){LibCrazyGames.Log("CrazyGames: adFinished"),t.adRequested=!1,t.finishedCallback!==void 0&&t.finishedCallback(!0),t.watchedCallback!==void 0&&t.watchedCallback(null),t.watchedCallback=void 0})},LibCrazyGames.prototype.IsAdsSupported=function(){return!0},LibCrazyGames.prototype.PreloadAd=function(e,t,n){n(null)},LibCrazyGames.prototype.ShowAd=function(e,t,n){this.adRequested&&(LibCrazyGames.Log("CrazyGames: Ad already requested"),self.watchedCallback({code:"ADS_NOT_LOADED",message:"ADS_NOT_LOADED"})),LibCrazyGames.Log("CrazyGames: Requesting ad"),this.adRequested=!0,"video"===t?(this.watchedCallback=n,this.crazysdk.requestAd("rewarded")):"inter"===t?(this.crazysdk.requestAd("midgame"),n(null)):n(null)};//
// Copyright (C) Mat Hopwood www.drmop.com
// For details of license see license.txt
//
function LibGameDistribution(){LibGameDistribution.Log(">>>> GameDistribution: Created!")}LibGameDistribution.Log=function(e){console.log(e)},LibGameDistribution.LogError=function(e){console.log(e)},LibGameDistribution.prototype.Init=function(e){LibGameDistribution.Log(">>>> GameDistribution: Init");var t=this;this.startedCallback=e.startedCallback,this.finishedCallback=e.finishedCallback,window.GD_OPTIONS={gameId:e.appId,onEvent:function(e){switch(e.name){case"SDK_GAME_START":LibGameDistribution.Log("GameDistribution: adFinished"),void 0!==t.finishedCallback&&t.finishedCallback(),void 0!==t.watchedCallback&&t.watchedCallback(null),t.watchedCallback=void 0;break;case"SDK_GAME_PAUSE":LibGameDistribution.Log("GameDistribution: adStarted"),void 0!==t.startedCallback&&t.startedCallback();break;case"AD_ERROR":LibGameDistribution.Log("GameDistribution: adError"),void 0!==t.finishedCallback&&t.finishedCallback(!1),void 0!==t.watchedCallback&&t.watchedCallback({code:"ADS_NOT_LOADED",message:"ADS_NOT_LOADED"}),t.watchedCallback=void 0;break;case"SDK_ERROR":LibGameDistribution.LogError("GameDistribution: SDK ERROR");break;case"SDK_GDPR_TRACKING":// this event is triggered when your user doesn't want to be tracked
break;case"SDK_GDPR_TARGETING":}}};var n=document.createElement("script");n.id="gamedistribution-jssdk",n.src="https://html5.api.gamedistribution.com/main.min.js",n.onload=function(){console.log(">>>>>>>> main.min.js loaded")},document.head.appendChild(n)},LibGameDistribution.prototype.IsAdsSupported=function(){return!0},LibGameDistribution.prototype.IsPaymentsSupported=function(){return!1},LibGameDistribution.prototype.PreloadAd=function(e,t,n){n(null)},LibGameDistribution.prototype.ShowAd=function(e,t,n){LibGameDistribution.Log("GameDistribution: Requesting ad"),console.log(gdsdk),console.log(window.gdsdk),"undefined"!=typeof gdsdk&&"undefined"!==gdsdk.showBanner&&n(null),"video"===t?(this.watchedCallback=n,gdsdk.showBanner()):"inter"===t?(gdsdk.showBanner(),n(null)):n(null)};//
// Copyright (C) Mat Hopwood www.drmop.com
// For details of license see license.txt
//
function AdsService(e){this.service=null,this.name=e,GameService.instance!==void 0&&GameService.instance.name===e?this.service=GameService.instance:PaymentsService.instance!==void 0&&PaymentsService.instance.name===e?this.service=PaymentsService.instance:"crazygames"===e?this.service=new LibCrazyGames:"gamedistribution"==e&&(this.service=new LibGameDistribution),AdsService.instance=this,this.service!==void 0&&(FBInstant.supportedAPIs.push("getInterstitialAdAsync"),FBInstant.supportedAPIs.push("getRewardedVideoAsync"),FBInstant.supportedAPIs.push("AdInstance.loadAsync"),FBInstant.supportedAPIs.push("AdInstance.showAsync"))}//
// INIT
//
AdsService.prototype.InitAds=function(e){return null!==this.service&&this.service.InitAds(e)},AdsService.prototype.IsAdsSupported=function(e,t){return null!==this.service&&this.service.IsAdsSupported(e,t)},AdsService.prototype.PreloadAd=function(e,t,n){return null===this.service?void 0:this.service.PreloadAd(e,t,n)},AdsService.prototype.ShowAd=function(e,t,n){return null===this.service?void 0:this.service.ShowAd(e,t,n)},PaymentsService.Product=function(e,t,n,a,r,i){this.title=e,this.productID=t,this.description=n,this.imageURI=a,this.price=r,this.priceCurrencyCode=i},PaymentsService.Purchase=function(e,t,n,a,r,i){this.developerPayload=e,this.paymentID=t,this.productID=n,this.purchaseTime=a,this.purchaseToken=r,this.signedRequest=i};function PaymentsService(e){this.service=null,this.name=e,GameService.instance!==void 0&&GameService.instance.name===e?this.service=GameService.instance:AdsService.instance!==void 0&&AdsService.instance.name===e&&(this.service=AdsService.instance),PaymentsService.instance=this,this.service!==void 0&&(FBInstant.supportedAPIs.push("payments.getCatalogAsync"),FBInstant.supportedAPIs.push("payments.purchaseAsync"),FBInstant.supportedAPIs.push("payments.getPurchasesAsync"),FBInstant.supportedAPIs.push("payments.consumePurchaseAsync"),FBInstant.supportedAPIs.push("payments.purchaseAsync"))}//
// INIT
//
PaymentsService.prototype.InitPayments=function(e,t){return null!==this.service&&this.service.InitPayments(e,t)},PaymentsService.prototype.IsPaymentsSupported=function(){return null!==this.service&&this.service.IsPaymentsSupported()},PaymentsService.prototype.GetProducts=function(e){return null===this.service?void 0:this.service.GetProducts(e)},PaymentsService.prototype.PurchaseProduct=function(e,t){return null===this.service?void 0:this.service.PurchaseProduct(e,t)},PaymentsService.prototype.RefundProduct=function(e,t){return null===this.service?void 0:this.service.RefundProduct(e,t)},PaymentsService.prototype.ConsumeProduct=function(e,t){return null===this.service?void 0:this.service.ConsumeProduct(e,t)},PaymentsService.prototype.GetPurchases=function(e){return null===this.service?void 0:this.service.GetPurchases(options,e)};//
// Copyright (C) Mat Hopwood www.drmop.com
// For details of license see license.txt
//
var FBInstant={options:{AllowAnonymous:!0,// When set to true new users will be auto logged in with an anonymous account
ApiKey:"",// Game service back-end API key
ApiSecret:"",// Game service back-end API secret
DevMode:"sandbox",// sandbox or prod
ShareURI:"http://yourdomain.com/index.php",// URI used by shareAsync dialog
ShareDlgWidth:600,// shareAsync dialog width
ShareDlgHeight:400,// shareAsync dialog height
AdsOptions:{},// Ads options
PaymentsOptions:{}// Payments options
},supportedAPIs:["player.getDataAsync","player.setDataAsync","player.getConnectedPlayersAsync","getLocale","initializeAsync","setLoadingProgress","startGameAsync","getEntryPointData","shareAsync","Leaderboard.getEntriesAsync","Leaderboard.getConnectedPlayerEntriesAsync","Leaderboard.getPlayerEntryAsync","Leaderboard.setScoreAsync","getLeaderboardAsync",//"updateAsync",
//"getEntryPointAsync",
//"switchGameAsync",
//"logEvent",
//"canCreateShortcutAsync",
//"getInterstitialAdAsync",
//"getRewardedVideoAsync",
//"AdInstance.loadAsync",
//"AdInstance.showAsync",
//"context.chooseAsync",
//"context.switchAsync",
//"context.createAsync",
//"context.getPlayersAsync",
//"payments.getCatalogAsync",
//"payments.purchaseAsync",
//"payments.getPurchasesAsync",
//"payments.consumePurchaseAsync",
//"payments.purchaseAsync",
"ext.isLoggedIn","ext.getLoginType","ext.getRegistrationDate","ext.loginWithShortCodeAsync","ext.loginAnonymouslyAsync","ext.loginWithEmailAsync","ext.loginWithFacebookAccessTokenAsync","ext.logoutAsync","ext.convertAccountAsync","ext.linkAccountAsync","ext.resetPasswordAsync","ext.changePasswordAsync","ext.getGames","ext.setProfileAsync","ext.addFriendAsync","ext.removeFriendAsync","ext.listUsersAsync","ext.sendEventAsync","ext.getEventsAsync","ext.getReferralCodeAsync","ext.useReferralCodeAsync","ext.shareTwitterAsync"],__state:{initialized:!1,purchasingReadyCallback:null},Log:function(e){console.log(e)},player:{getName:function(){var e=GameService.instance.GetProfileData();return null===e?null:e.name},getPhoto:function(){var e=GameService.instance.GetProfileData();if(null===e)return null;var t=e.photo;return console.log("photo = "+t),void 0===t?null:t},getID:function(){var e=GameService.instance.GetGamerData();return null===e?null:e.gamer_id},getDataAsync:function(e){return new Promise(function(t){GameService.instance.GetUserData("userData",function(n){var a={};null===n?(n=localStorage.getItem("userData"),n=JSON.parse(n)):localStorage.setItem("userData",JSON.stringify(n)),null!==n&&e.forEach(function(e){"undefined"!==n[e]&&(a[e]=n[e])}),t(a)})})},setDataAsync:function(e){return new Promise(function(t){var n=localStorage.getItem("userData"),a=JSON.parse(n);for(var r in(void 0===a||null==a)&&(a={}),e)a[r]=e[r];localStorage.setItem("userData",JSON.stringify(a)),GameService.instance.SetUserData("userData",JSON.stringify(a),function(){t()})})},getStatsAsync:function(){// TODO:
},setStatsAsync:function(){// TODO:
},incrementStatsAsync:function(){// TODO:
},flushDataAsync:function(){// TODO:
},getConnectedPlayersAsync:function(){return new Promise(function(e){GameService.instance.GetFriends(function(t){e(t)})})},getSignedPlayerInfoAsync:function(){// TODO:
return new Promise(function(e){e(null)})}},context:{getID:function(){return null},chooseAsync:function(){// TODO:
return new Promise(function(e){e()})},switchAsync:function(){// TODO:
return new Promise(function(e){e()})},createAsync:function(){// TODO:
return new Promise(function(e){e()})},getType:function(){// TODO:
return"SOLO"},isSizeBetween:function(){// TODO:
return!0},getPlayersAsync:function(){// TDOO:
return new Promise(function(e){e([])})}},payments:{getCatalogAsync:function(){PaymentsService.instance.GetProducts(function(e,t){return new Promise(function(n,a){null===e?n(t):a(e)})})},purchaseAsync:function(e){PaymentsService.instance.PurchaseProduct(e,function(e,t){return new Promise(function(n,a){null===e?n(t):a(e)})})},getPurchasesAsync:function(){PaymentsService.instance.GetPurchases(function(e,t){return new Promise(function(n,a){null===e?n(t):a(e)})})},consumePurchaseAsync:function(e){PaymentsService.instance.ConsumeProduct(e,function(e){return new Promise(function(t,n){null===e?t():n(e)})})},onReady:function(e){FBInstant.__state.purchasingReadyCallback=e}},getSupportedAPIs:function(){return FBInstant.supportedAPIs},getLocale:function(){var e=GameService.instance.GetProfileData();return null===e?"en_US":e.lang+"_"},initializeAsync:function(){return new Promise(function(e){FBInstant.Log(">>>> initializeAsync");var t=FBInstant.options;GameService.instance.Init(t.ApiKey,t.ApiSecret,t.DevMode),AdsService.instance!==void 0&&AdsService.instance.InitAds(t.AdsOptions),PaymentsService.instance!==void 0&&PaymentsService.instance.InitPayments(t.PaymentsOptions,function(e){null===e&&null!==FBInstant.__state.purchasingReadyCallback&&FBInstant.__state.purchasingReadyCallback()}),e()})},setLoadingProgress:function(){return new Promise(function(e){e()})},startGameAsync:function(){return new Promise(function(e,t){FBInstant.Log(">>>> startGameAsync"),GameService.instance.LoginAnonymously(FBInstant.options.AllowAnonymous,function(n){null===n?(FBInstant.__state.initialized=!0,FBInstant.Log(">> Login success"),e()):(FBInstant.Log(">> Login failed"),t())})})},quit:function(){// TODO:
},updateAsync:function(){// TODO:
return new Promise(function(e){e()})},getEntryPointData:function(){FBInstant.Log(">>>> getEntryPointData");var e=window.location.search;e.startsWith("?")&&(e=e.substring(1));for(var n=e.split("&"),a=0;a<n.length;a++)if(n[a].startsWith("data")){var r=n[a].split("=");return void 0!==r[1]&&""!==r[1]&&(e=decodeURIComponent(r[1]),e=JSON.parse(e),FBInstant.Log(e)),void 0===e?null:e}return null},getEntryPointAsync:function(){// TODO:
return new Promise(function(e){e("admin_message")})},setSessionData:function(){// TODO:
},getPlatform:function(){return"WEB"},getSDKVersion:function(){return"6.2"},shareAsync:function(e){return new Promise(function(t){var n=e.title===void 0?"":e.title,a=e.text,r=encodeURIComponent(FBInstant.options.ShareURI+"?t="+n+"&d="+a);e.data!==void 0&&(r+="&data="+JSON.stringify(e.data)),window.open("https://www.facebook.com/sharer/sharer.php?u="+r,"pop","width="+FBInstant.options.ShareDlgWidth+", height="+FBInstant.options.ShareDlgHeight+", scrollbars=no"),t()})},switchGameAsync:function(){return Promise.reject(new Error("Not available"))},logEvent:function(){// TODO:
return null},onPause:function(e){window.onblur=function(){e()}},canCreateShortcutAsync:function(){return Promise.resolve(!1)},Leaderboard:function(e){this.name=e},getLeaderboardAsync:function(e){return new Promise(function(t){t(new FBInstant.Leaderboard(e))})},AdInstance:function(e,t){this.id=e,this.type=t},getInterstitialAdAsync:function(e){return new Promise(function(t,n){AdsService.instance.IsAdsSupported(e,"inter")?t(new FBInstant.AdInstance(e,"inter")):n({code:"CLIENT_UNSUPPORTED_OPERATION",message:"CLIENT_UNSUPPORTED_OPERATION"})})},getRewardedVideoAsync:function(e){return new Promise(function(t,n){AdsService.instance.IsAdsSupported(e,"video")?t(new FBInstant.AdInstance(e,"video")):n({code:"CLIENT_UNSUPPORTED_OPERATION",message:"CLIENT_UNSUPPORTED_OPERATION"})})}};//
// Copyright (C) Mat Hopwood www.drmop.com
// For details of license see license.txt
//
//
// None standard extensions (Check FBInstant.ext is not undefined before using)
//
FBInstant.AdInstance.prototype.getPlacementID=function(){return this.id},FBInstant.AdInstance.prototype.loadAsync=function(){var e=this;return new Promise(function(t,n){AdsService.instance.PreloadAd(e.id,e.type,function(e){null===e?t():n(e)})})},FBInstant.AdInstance.prototype.showAsync=function(){var e=this;return new Promise(function(t,n){AdsService.instance.ShowAd(e.id,e.type,function(e){null===e?t():n(e)})})},FBInstant.Leaderboard.prototype.getEntriesAsync=function(e,t){var n=this;return new Promise(function(a){GameService.instance.LeaderboardGetPaged(n.name,(0|t/e)+1,e,function(e){a(e)})})},FBInstant.Leaderboard.prototype.getConnectedPlayerEntriesAsync=function(e,t){var n=this;return new Promise(function(a){GameService.instance.LeaderboardGetFriendsPaged(n.name,(0|t/e)+1,e,function(e){a(e)})})},FBInstant.Leaderboard.prototype.getPlayerEntryAsync=function(){var e=this;return new Promise(function(t){GameService.instance.LeaderboardGetRank(e.name,function(e){t(e)})})},FBInstant.Leaderboard.prototype.setScoreAsync=function(e,t){var n=this;return new Promise(function(a){GameService.instance.LeaderboardSetScore(n.name,"hightolow",e,t,function(e){a(e)})})},FBInstant.ext={/**
     * Checks to see if the user is logged in
     * @return true if logged in
     */isLoggedIn:function(){return GameService.instance.GetProfileData()!==void 0},/**
     * Gets the login type, e.g. anonymous, email, facebook etc..
     * @return Login network type
     */getLoginType:function(){var e=GameService.instance.GetProfileData();return void 0===e?"none":e.network},/**
     * Gets the date / time that the user first registered
     * @return List of games
     */getRegistrationDate:function(){var e=GameService.instance.GetProfileData();return void 0===e?null:e.registerTime},/**
     * Logs the player in with the supplied shortcode
     * @param shortcode {string} The Game service shortcode (sent by password reset usually)
     * @return error or null if no error, gamer contains the gamers data
     */loginWithShortCodeAsync:function(e){return new Promise(function(t){GameService.instance.LoginWithShortCode(e,function(e,n){t(e,n)})})},/**
     * Logs the player in anonymously
     * @return error or null if no error, gamer contains the gamers data
     */loginAnonymouslyAsync:function(){return new Promise(function(e,t){GameService.instance.LoginAnonymously(FBInstant.options.AllowAnonymous,function(n){null===n?(FBInstant.Log(">> Login success"),e()):(FBInstant.Log(">> Login failed"),t())})})},/**
     * Logs the player in with an email and password
     * @param email {string} The users email address
     * @param password {string} The users password
     * @param options {object} Login options
     * @return error or null if no error, gamer contains the gamers data
     */loginWithEmailAsync:function(e,t,n){return new Promise(function(a,r){GameService.instance.LoginWithCredentials(e,t,n,function(e){null===e?(FBInstant.Log(">> Login with email success"),a()):(FBInstant.Log(">> Login with email failed"),r())})})},/**
     * Logs the player in with the supplied Facebook access token
     * @param facebook_access_token {string} The Facebook access token, this can be retrieved from response.authResponse.accessToken in the FB.getLoginStatus() callback
     * @return error or null if no error, gamer contains the gamers data
     */loginWithFacebookAccessTokenAsync:function(e){return new Promise(function(t){GameService.instance.LoginWithFacebook(e,function(e,n){t(e,n)})})},/**
     * Logs the player out
     * @return error or null if no error
     */logoutAsync:function(){return new Promise(function(e){GameService.instance.Logout(function(t){e(t)})})},/**
     * Converts an anonymous account to an email or social network account
     * @param network {string} Type of network to convert account to, email, facebook etc..
     * @param username_or_id {string} Email address for email or ID for Facebook
     * @param password_or_secret {string} Password for email or token for Facebook
     * @return error or null if no error
     */convertAccountAsync:function(e,t,n){return new Promise(function(a){GameService.instance.ConvertAccount(e,t,n,function(e){a(e)})})},/**
     * Associates a social network account with a game service account
     * @param network {string} Type of network to convert account to, facebook, googleplus etc..
     * @param id {string} ID for Facebook
     * @param secret {string} Token for Facebook
     * @return error or null if no error
     */linkAccountAsync:function(e,t,n){return new Promise(function(a){GameService.instance.LinkAccount(e,t,n,function(e){a(e)})})},/**
     * Sends an email to the players account with a shortcode that can be used to login
     * @param to_email {string} Users emali address
     * @param from_email {string} Your company support email address
     * @param title {string} Email title
     * @param body {Object} Email body, e.g. { body: "You can login with this <b>[[SHORTCODE]]</b>", html: true };
     * @return error or null if no error
     */resetPasswordAsync:function(){return new Promise(function(e){GameService.instance.ResetPassword(network,id,secret,function(t){e(t)})})},/**
     * Changes the users account password
     * @param new_password {string} New password
     * @return error or null if no error
     */changePasswordAsync:function(e){return new Promise(function(t){GameService.instance.ChangePassword(e,function(e){t(e)})})},/**
     * Gets list of games that the user has played
     * @return List of games
     */getGames:function(){return GameService.instance.GetGames()},/**
     * Sets the players profile data
     * @param profile {object} An object containing profile fields and data
     * @return error or null if no error
     */setProfileAsync:function(e){return new Promise(function(t){GameService.instance.SetProfile(e,function(e){t(e)})})},/**
     * Adds a user as a friend
     * @param id {string} User ID of user to add as a friend
     * @return true if success
     */addFriendAsync:function(e){return new Promise(function(t){GameService.instance.AddFriend(e,function(e){console.log(">>>>> addFriendAsync "+e),t(e)})})},/**
     * Removes a user as a friend
     * @param id {string} User ID of user to unfriend
     * @return true if success
     */removeFriendAsync:function(e){return new Promise(function(t){GameService.instance.RemoveFriend(e,function(e){t(e)})})},/**
     * Searches for users using a pattern
     * @param match_pattern {string} A filter used to search for players
     * @param start {number} Index of first user to be returned
     * @param limit {number} Max number of users to return
     * @return List of found users or null if error
     */listUsersAsync:function(e,t,n){return new Promise(function(a){GameService.instance.ListUsers(e,t,n,function(e){a(e)})})},/**
     * Send event to another user
     * @param id {string} User ID of user to receive event
     * @param evt {object} Event object to send
     * @return true if success
     */sendEventAsync:function(e,t){return new Promise(function(n){GameService.instance.SendEvent(e,t,function(e){n(null===e)})})},/**
     * Collects any pending events
     * @return array of events or null if none
     */getEventsAsync:function(){return new Promise(function(e){GameService.instance.GetAllEvents(function(t){e(t)})})},/**
     * Get a generated referral code
     * @return a referral code or null if failed
     */getReferralCodeAsync:function(){return new Promise(function(e){GameService.instance.GetReferralCode(function(t){e(t)})})},/**
     * Get a generated referral code
     * @return a referral code or null if failed
     */useReferralCodeAsync:function(e){return new Promise(function(t){GameService.instance.UseReferralCode(e,function(e){t(e)})})},/**
     * Consume a referral code
     * @param options {object} message options, only text is supported at this time
     * @return true if success
     */shareTwitterAsync:function(e){return new Promise(function(t){var n=e.text,a=encodeURIComponent(n);window.open("https://twitter.com/intent/tweet?text="+a,"pop","width="+FBInstant.options.ShareDlgWidth+", height="+FBInstant.options.ShareDlgHeight+", scrollbars=no"),t()})}};